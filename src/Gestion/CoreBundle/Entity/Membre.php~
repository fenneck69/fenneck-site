<?php

namespace Gestion\CoreBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Membre
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Gestion\CoreBundle\Entity\MembreRepository")
 */
class Membre
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

	/**
     * @ORM\ManyToOne(targetEntity="Gestion\CoreBundle\Entity\Famille",inversedBy="membres")
     * @ORM\JoinColumn(nullable=false)
     */
    private $famille;

    /**
     * @var string
     * @Assert\NotBlank()
     * @ORM\Column(name="nom", type="string", length=255)
     */
    private $nom;

    /**
     * @var string
     * @Assert\NotBlank()
     * @ORM\Column(name="prenom", type="string", length=255)
     */
    private $prenom;
	
	/**
     * @var \DateTime
     * @Assert\NotBlank()
	 * @Assert\Date()
     * @ORM\Column(name="datenaissance", type="date")
     */
    private $dateNaissance;


    /**
     * @ORM\ManyToOne(targetEntity="Gestion\CoreBundle\Entity\MembreType")
     * @ORM\JoinColumn(nullable=false)
     */
    private $type;

    /**
     * @var ArrayCollection<Remboursements> $remboursements
     *
     * @ORM\OneToMany(targetEntity="Gestion\CoreBundle\Entity\Remboursement", mappedBy="membre", cascade={"all"})
     */
    private $remboursements;

    public function __toString()
    {
        return $this->nom.' '.$this->prenom;
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nom
     *
     * @param string $nom
     * @return Membre
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get nom
     *
     * @return string 
     */
    public function getNom()
    {
        return $this->nom;
    }

    /**
     * Set prenom
     *
     * @param string $prenom
     * @return Membre
     */
    public function setPrenom($prenom)
    {
        $this->prenom = $prenom;

        return $this;
    }

    /**
     * Get prenom
     *
     * @return string 
     */
    public function getPrenom()
    {
        return $this->prenom;
    }

    /**
     * Set dateNaissance
     *
     * @param \DateTime $dateNaissance
     * @return Membre
     */
    public function setDateNaissance($dateNaissance)
    {
        $this->dateNaissance = $dateNaissance;

        return $this;
    }

    /**
     * Get dateNaissance
     *
     * @return \DateTime 
     */
    public function getDateNaissance()
    {
        return $this->dateNaissance;
    }

    /**
     * Set famille
     *
     * @param \Gestion\CoreBundle\Entity\Famille $famille
     * @return Membre
     */
    public function setFamille(\Gestion\CoreBundle\Entity\Famille $famille)
    {
        $this->famille = $famille;

        return $this;
    }

    /**
     * Get famille
     *
     * @return \Gestion\CoreBundle\Entity\Famille 
     */
    public function getFamille()
    {
        return $this->famille;
    }

    /**
     * Set type
     *
     * @param \Gestion\CoreBundle\Entity\MembreType $type
     * @return Membre
     */
    public function setType(\Gestion\CoreBundle\Entity\MembreType $type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return \Gestion\CoreBundle\Entity\MembreType 
     */
    public function getType()
    {
        return $this->type;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->remboursements = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add remboursements
     *
     * @param \Gestion\CoreBundle\Entity\Remboursement $remboursements
     * @return Membre
     */
    public function addRemboursement(\Gestion\CoreBundle\Entity\Remboursement $remboursements)
    {
        $this->remboursements[] = $remboursements;

        return $this;
    }

    /**
     * Remove remboursements
     *
     * @param \Gestion\CoreBundle\Entity\Remboursement $remboursements
     */
    public function removeRemboursement(\Gestion\CoreBundle\Entity\Remboursement $remboursements)
    {
        $this->remboursements->removeElement($remboursements);
    }

    /**
     * Get remboursements
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getRemboursements()
    {
        return $this->remboursements;
    }
}
