<?php

namespace Proxies\__CG__\Gestion\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Remboursement extends \Gestion\CoreBundle\Entity\Remboursement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'id', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'membre', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'activite', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'created', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'updated', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'prix', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'quantite', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'montantParticipation', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'montantCheque', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'valide', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'numCheque', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'dateActivite');
        }

        return array('__isInitialized__', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'id', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'membre', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'activite', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'created', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'updated', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'prix', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'quantite', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'montantParticipation', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'montantCheque', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'valide', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'numCheque', '' . "\0" . 'Gestion\\CoreBundle\\Entity\\Remboursement' . "\0" . 'dateActivite');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Remboursement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function isValid($context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValid', array($context));

        return parent::isValid($context);
    }

    /**
     * {@inheritDoc}
     */
    public function calculMontant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculMontant', array());

        return parent::calculMontant();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix($prix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', array($prix));

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', array());

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantite($quantite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantite', array($quantite));

        return parent::setQuantite($quantite);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantite', array());

        return parent::getQuantite();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontantParticipation($montantParticipation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontantParticipation', array($montantParticipation));

        return parent::setMontantParticipation($montantParticipation);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontantParticipation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontantParticipation', array());

        return parent::getMontantParticipation();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontantCheque($montantCheque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontantCheque', array($montantCheque));

        return parent::setMontantCheque($montantCheque);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontantCheque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontantCheque', array());

        return parent::getMontantCheque();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumCheque($numCheque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumCheque', array($numCheque));

        return parent::setNumCheque($numCheque);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumCheque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumCheque', array());

        return parent::getNumCheque();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateActivite($dateActivite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateActivite', array($dateActivite));

        return parent::setDateActivite($dateActivite);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateActivite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateActivite', array());

        return parent::getDateActivite();
    }

    /**
     * {@inheritDoc}
     */
    public function setMembre(\Gestion\CoreBundle\Entity\Membre $membre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMembre', array($membre));

        return parent::setMembre($membre);
    }

    /**
     * {@inheritDoc}
     */
    public function getMembre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembre', array());

        return parent::getMembre();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivite(\Gestion\CoreBundle\Entity\Activite $activite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivite', array($activite));

        return parent::setActivite($activite);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivite', array());

        return parent::getActivite();
    }

    /**
     * {@inheritDoc}
     */
    public function setValide($valide)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValide', array($valide));

        return parent::setValide($valide);
    }

    /**
     * {@inheritDoc}
     */
    public function getValide()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValide', array());

        return parent::getValide();
    }

}
